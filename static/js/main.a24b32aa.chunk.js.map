{"version":3,"sources":["components/Cards/Cards.module.css","api/countries.js","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","hoverBackgroundColor","borderWidth","value","options","legend","display","title","text","lineChart","borderColor","fill","className","styles","container","Countries","handleCountryChange","countries","setCountries","countriesData","name","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Info","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","rootmaker1","CardContent","Typography","color","gutterBottom","style","fontSize","variant","start","end","duration","separator","Date","toDateString","rootmaker2","rootmaker3","App","state","setState","this","path","image","src","alt","CountryPicker","Cards","padding","class","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a24b32aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3C6aR\",\"card\":\"Cards_card__3KNBg\",\"infected\":\"Cards_infected__1fOd8\",\"recovered\":\"Cards_recovered__177Ub\",\"deaths\":\"Cards_deaths__3mHKj\",\"rootmaker3\":\"Cards_rootmaker3__3iiSI\",\"gradients\":\"Cards_gradients__2RzND\",\"rootmaker2\":\"Cards_rootmaker2__1hJJO\",\"rootmaker1\":\"Cards_rootmaker1__3XZy1\"};","export default [{\"name\":\"Afghanistan\",\"iso2\":\"AF\",\"iso3\":\"AFG\"},{\"name\":\"Albania\",\"iso2\":\"AL\",\"iso3\":\"ALB\"},{\"name\":\"Algeria\",\"iso2\":\"DZ\",\"iso3\":\"DZA\"},{\"name\":\"Andorra\",\"iso2\":\"AD\",\"iso3\":\"AND\"},{\"name\":\"Angola\",\"iso2\":\"AO\",\"iso3\":\"AGO\"},{\"name\":\"Antigua and Barbuda\",\"iso2\":\"AG\",\"iso3\":\"ATG\"},{\"name\":\"Argentina\",\"iso2\":\"AR\",\"iso3\":\"ARG\"},{\"name\":\"Armenia\",\"iso2\":\"AM\",\"iso3\":\"ARM\"},{\"name\":\"Australia\",\"iso2\":\"AU\",\"iso3\":\"AUS\"},{\"name\":\"Austria\",\"iso2\":\"AT\",\"iso3\":\"AUT\"},{\"name\":\"Azerbaijan\",\"iso2\":\"AZ\",\"iso3\":\"AZE\"},{\"name\":\"Bahamas\",\"iso2\":\"BS\",\"iso3\":\"BHS\"},{\"name\":\"Bahrain\",\"iso2\":\"BH\",\"iso3\":\"BHR\"},{\"name\":\"Barbados\",\"iso2\":\"BB\",\"iso3\":\"BRB\"},{\"name\":\"Belarus\",\"iso2\":\"BY\",\"iso3\":\"BLR\"},{\"name\":\"Belgium\",\"iso2\":\"BE\",\"iso3\":\"BEL\"},{\"name\":\"Belize\",\"iso2\":\"BZ\",\"iso3\":\"BLZ\"},{\"name\":\"Benin\",\"iso2\":\"BJ\",\"iso3\":\"BEN\"},{\"name\":\"Bhutan\",\"iso2\":\"BT\",\"iso3\":\"BTN\"},{\"name\":\"Bolivia\",\"iso2\":\"BO\",\"iso3\":\"BOL\"},{\"name\":\"Bosnia and Herzegovina\",\"iso2\":\"BA\",\"iso3\":\"BIH\"},{\"name\":\"Botswana\",\"iso2\":\"BW\",\"iso3\":\"BWA\"},{\"name\":\"Brazil\",\"iso2\":\"BR\",\"iso3\":\"BRA\"},{\"name\":\"Brunei\",\"iso2\":\"BN\",\"iso3\":\"BRN\"},{\"name\":\"Bulgaria\",\"iso2\":\"BG\",\"iso3\":\"BGR\"},{\"name\":\"Burkina Faso\",\"iso2\":\"BF\",\"iso3\":\"BFA\"},{\"name\":\"Burma\"},{\"name\":\"Burundi\",\"iso2\":\"BI\",\"iso3\":\"BDI\"},{\"name\":\"Cabo Verde\"},{\"name\":\"Cambodia\",\"iso2\":\"KH\",\"iso3\":\"KHM\"},{\"name\":\"Cameroon\",\"iso2\":\"CM\",\"iso3\":\"CMR\"},{\"name\":\"Canada\",\"iso2\":\"CA\",\"iso3\":\"CAN\"},{\"name\":\"Central African Republic\",\"iso2\":\"CF\",\"iso3\":\"CAF\"},{\"name\":\"Chad\",\"iso2\":\"TD\",\"iso3\":\"TCD\"},{\"name\":\"Chile\",\"iso2\":\"CL\",\"iso3\":\"CHL\"},{\"name\":\"China\",\"iso2\":\"CN\",\"iso3\":\"CHN\"},{\"name\":\"Colombia\",\"iso2\":\"CO\",\"iso3\":\"COL\"},{\"name\":\"Congo (Brazzaville)\"},{\"name\":\"Congo (Kinshasa)\"},{\"name\":\"Costa Rica\",\"iso2\":\"CR\",\"iso3\":\"CRI\"},{\"name\":\"Cote d'Ivoire\"},{\"name\":\"Croatia\",\"iso2\":\"HR\",\"iso3\":\"HRV\"},{\"name\":\"Cuba\",\"iso2\":\"CU\",\"iso3\":\"CUB\"},{\"name\":\"Cyprus\",\"iso2\":\"CY\",\"iso3\":\"CYP\"},{\"name\":\"Czechia\",\"iso2\":\"CZ\",\"iso3\":\"CZE\"},{\"name\":\"Denmark\",\"iso2\":\"DK\",\"iso3\":\"DNK\"},{\"name\":\"Diamond Princess\"},{\"name\":\"Djibouti\",\"iso2\":\"DJ\",\"iso3\":\"DJI\"},{\"name\":\"Dominica\",\"iso2\":\"DM\",\"iso3\":\"DMA\"},{\"name\":\"Dominican Republic\",\"iso2\":\"DO\",\"iso3\":\"DOM\"},{\"name\":\"Ecuador\",\"iso2\":\"EC\",\"iso3\":\"ECU\"},{\"name\":\"Egypt\",\"iso2\":\"EG\",\"iso3\":\"EGY\"},{\"name\":\"El Salvador\",\"iso2\":\"SV\",\"iso3\":\"SLV\"},{\"name\":\"Equatorial Guinea\",\"iso2\":\"GQ\",\"iso3\":\"GNQ\"},{\"name\":\"Eritrea\",\"iso2\":\"ER\",\"iso3\":\"ERI\"},{\"name\":\"Estonia\",\"iso2\":\"EE\",\"iso3\":\"EST\"},{\"name\":\"Eswatini\"},{\"name\":\"Ethiopia\",\"iso2\":\"ET\",\"iso3\":\"ETH\"},{\"name\":\"Fiji\",\"iso2\":\"FJ\",\"iso3\":\"FJI\"},{\"name\":\"Finland\",\"iso2\":\"FI\",\"iso3\":\"FIN\"},{\"name\":\"France\",\"iso2\":\"FR\",\"iso3\":\"FRA\"},{\"name\":\"Gabon\",\"iso2\":\"GA\",\"iso3\":\"GAB\"},{\"name\":\"Gambia\",\"iso2\":\"GM\",\"iso3\":\"GMB\"},{\"name\":\"Georgia\",\"iso2\":\"GE\",\"iso3\":\"GEO\"},{\"name\":\"Germany\",\"iso2\":\"DE\",\"iso3\":\"DEU\"},{\"name\":\"Ghana\",\"iso2\":\"GH\",\"iso3\":\"GHA\"},{\"name\":\"Greece\",\"iso2\":\"GR\",\"iso3\":\"GRC\"},{\"name\":\"Grenada\",\"iso2\":\"GD\",\"iso3\":\"GRD\"},{\"name\":\"Guatemala\",\"iso2\":\"GT\",\"iso3\":\"GTM\"},{\"name\":\"Guinea\",\"iso2\":\"GN\",\"iso3\":\"GIN\"},{\"name\":\"Guinea-Bissau\",\"iso2\":\"GW\",\"iso3\":\"GNB\"},{\"name\":\"Guyana\",\"iso2\":\"GY\",\"iso3\":\"GUY\"},{\"name\":\"Haiti\",\"iso2\":\"HT\",\"iso3\":\"HTI\"},{\"name\":\"Holy See\"},{\"name\":\"Honduras\",\"iso2\":\"HN\",\"iso3\":\"HND\"},{\"name\":\"Hungary\",\"iso2\":\"HU\",\"iso3\":\"HUN\"},{\"name\":\"Iceland\",\"iso2\":\"IS\",\"iso3\":\"ISL\"},{\"name\":\"India\",\"iso2\":\"IN\",\"iso3\":\"IND\"},{\"name\":\"Indonesia\",\"iso2\":\"ID\",\"iso3\":\"IDN\"},{\"name\":\"Iran\",\"iso2\":\"IR\",\"iso3\":\"IRN\"},{\"name\":\"Iraq\",\"iso2\":\"IQ\",\"iso3\":\"IRQ\"},{\"name\":\"Ireland\",\"iso2\":\"IE\",\"iso3\":\"IRL\"},{\"name\":\"Israel\",\"iso2\":\"IL\",\"iso3\":\"ISR\"},{\"name\":\"Italy\",\"iso2\":\"IT\",\"iso3\":\"ITA\"},{\"name\":\"Jamaica\",\"iso2\":\"JM\",\"iso3\":\"JAM\"},{\"name\":\"Japan\",\"iso2\":\"JP\",\"iso3\":\"JPN\"},{\"name\":\"Jordan\",\"iso2\":\"JO\",\"iso3\":\"JOR\"},{\"name\":\"Kazakhstan\",\"iso2\":\"KZ\",\"iso3\":\"KAZ\"},{\"name\":\"Kenya\",\"iso2\":\"KE\",\"iso3\":\"KEN\"},{\"name\":\"Korea, South\",\"iso2\":\"KR\",\"iso3\":\"KOR\"},{\"name\":\"Kosovo\",\"iso2\":\"XK\",\"iso3\":\"XKX\"},{\"name\":\"Kuwait\",\"iso2\":\"KW\",\"iso3\":\"KWT\"},{\"name\":\"Kyrgyzstan\",\"iso2\":\"KG\",\"iso3\":\"KGZ\"},{\"name\":\"Laos\",\"iso2\":\"LA\",\"iso3\":\"LAO\"},{\"name\":\"Latvia\",\"iso2\":\"LV\",\"iso3\":\"LVA\"},{\"name\":\"Lebanon\",\"iso2\":\"LB\",\"iso3\":\"LBN\"},{\"name\":\"Liberia\",\"iso2\":\"LR\",\"iso3\":\"LBR\"},{\"name\":\"Libya\",\"iso2\":\"LY\",\"iso3\":\"LBY\"},{\"name\":\"Liechtenstein\",\"iso2\":\"LI\",\"iso3\":\"LIE\"},{\"name\":\"Lithuania\",\"iso2\":\"LT\",\"iso3\":\"LTU\"},{\"name\":\"Luxembourg\",\"iso2\":\"LU\",\"iso3\":\"LUX\"},{\"name\":\"MS Zaandam\"},{\"name\":\"Madagascar\",\"iso2\":\"MG\",\"iso3\":\"MDG\"},{\"name\":\"Malawi\",\"iso2\":\"MW\",\"iso3\":\"MWI\"},{\"name\":\"Malaysia\",\"iso2\":\"MY\",\"iso3\":\"MYS\"},{\"name\":\"Maldives\",\"iso2\":\"MV\",\"iso3\":\"MDV\"},{\"name\":\"Mali\",\"iso2\":\"ML\",\"iso3\":\"MLI\"},{\"name\":\"Malta\",\"iso2\":\"MT\",\"iso3\":\"MLT\"},{\"name\":\"Mauritania\",\"iso2\":\"MR\",\"iso3\":\"MRT\"},{\"name\":\"Mauritius\",\"iso2\":\"MU\",\"iso3\":\"MUS\"},{\"name\":\"Mexico\",\"iso2\":\"MX\",\"iso3\":\"MEX\"},{\"name\":\"Moldova\",\"iso2\":\"MD\",\"iso3\":\"MDA\"},{\"name\":\"Monaco\",\"iso2\":\"MC\",\"iso3\":\"MCO\"},{\"name\":\"Mongolia\",\"iso2\":\"MN\",\"iso3\":\"MNG\"},{\"name\":\"Montenegro\",\"iso2\":\"ME\",\"iso3\":\"MNE\"},{\"name\":\"Morocco\",\"iso2\":\"MA\",\"iso3\":\"MAR\"},{\"name\":\"Mozambique\",\"iso2\":\"MZ\",\"iso3\":\"MOZ\"},{\"name\":\"Namibia\",\"iso2\":\"NA\",\"iso3\":\"NAM\"},{\"name\":\"Nepal\",\"iso2\":\"NP\",\"iso3\":\"NPL\"},{\"name\":\"Netherlands\",\"iso2\":\"NL\",\"iso3\":\"NLD\"},{\"name\":\"New Zealand\",\"iso2\":\"NZ\",\"iso3\":\"NZL\"},{\"name\":\"Nicaragua\",\"iso2\":\"NI\",\"iso3\":\"NIC\"},{\"name\":\"Niger\",\"iso2\":\"NE\",\"iso3\":\"NER\"},{\"name\":\"Nigeria\",\"iso2\":\"NG\",\"iso3\":\"NGA\"},{\"name\":\"North Macedonia\"},{\"name\":\"Norway\",\"iso2\":\"NO\",\"iso3\":\"NOR\"},{\"name\":\"Oman\",\"iso2\":\"OM\",\"iso3\":\"OMN\"},{\"name\":\"Pakistan\",\"iso2\":\"PK\",\"iso3\":\"PAK\"},{\"name\":\"Panama\",\"iso2\":\"PA\",\"iso3\":\"PAN\"},{\"name\":\"Papua New Guinea\",\"iso2\":\"PG\",\"iso3\":\"PNG\"},{\"name\":\"Paraguay\",\"iso2\":\"PY\",\"iso3\":\"PRY\"},{\"name\":\"Peru\",\"iso2\":\"PE\",\"iso3\":\"PER\"},{\"name\":\"Philippines\",\"iso2\":\"PH\",\"iso3\":\"PHL\"},{\"name\":\"Poland\",\"iso2\":\"PL\",\"iso3\":\"POL\"},{\"name\":\"Portugal\",\"iso2\":\"PT\",\"iso3\":\"PRT\"},{\"name\":\"Qatar\",\"iso2\":\"QA\",\"iso3\":\"QAT\"},{\"name\":\"Romania\",\"iso2\":\"RO\",\"iso3\":\"ROU\"},{\"name\":\"Russia\",\"iso2\":\"RU\",\"iso3\":\"RUS\"},{\"name\":\"Rwanda\",\"iso2\":\"RW\",\"iso3\":\"RWA\"},{\"name\":\"Saint Kitts and Nevis\",\"iso2\":\"KN\",\"iso3\":\"KNA\"},{\"name\":\"Saint Lucia\",\"iso2\":\"LC\",\"iso3\":\"LCA\"},{\"name\":\"Saint Vincent and the Grenadines\",\"iso2\":\"VC\",\"iso3\":\"VCT\"},{\"name\":\"San Marino\",\"iso2\":\"SM\",\"iso3\":\"SMR\"},{\"name\":\"Sao Tome and Principe\",\"iso2\":\"ST\",\"iso3\":\"STP\"},{\"name\":\"Saudi Arabia\",\"iso2\":\"SA\",\"iso3\":\"SAU\"},{\"name\":\"Senegal\",\"iso2\":\"SN\",\"iso3\":\"SEN\"},{\"name\":\"Serbia\",\"iso2\":\"RS\",\"iso3\":\"SRB\"},{\"name\":\"Seychelles\",\"iso2\":\"SC\",\"iso3\":\"SYC\"},{\"name\":\"Sierra Leone\",\"iso2\":\"SL\",\"iso3\":\"SLE\"},{\"name\":\"Singapore\",\"iso2\":\"SG\",\"iso3\":\"SGP\"},{\"name\":\"Slovakia\",\"iso2\":\"SK\",\"iso3\":\"SVK\"},{\"name\":\"Slovenia\",\"iso2\":\"SI\",\"iso3\":\"SVN\"},{\"name\":\"Somalia\",\"iso2\":\"SO\",\"iso3\":\"SOM\"},{\"name\":\"South Africa\",\"iso2\":\"ZA\",\"iso3\":\"ZAF\"},{\"name\":\"South Sudan\",\"iso2\":\"SS\",\"iso3\":\"SSD\"},{\"name\":\"Spain\",\"iso2\":\"ES\",\"iso3\":\"ESP\"},{\"name\":\"Sri Lanka\",\"iso2\":\"LK\",\"iso3\":\"LKA\"},{\"name\":\"Sudan\",\"iso2\":\"SD\",\"iso3\":\"SDN\"},{\"name\":\"Suriname\",\"iso2\":\"SR\",\"iso3\":\"SUR\"},{\"name\":\"Sweden\",\"iso2\":\"SE\",\"iso3\":\"SWE\"},{\"name\":\"Switzerland\",\"iso2\":\"CH\",\"iso3\":\"CHE\"},{\"name\":\"Syria\",\"iso2\":\"SY\",\"iso3\":\"SYR\"},{\"name\":\"Taiwan*\",\"iso2\":\"TW\",\"iso3\":\"TWN\"},{\"name\":\"Tanzania\",\"iso2\":\"TZ\",\"iso3\":\"TZA\"},{\"name\":\"Thailand\",\"iso2\":\"TH\",\"iso3\":\"THA\"},{\"name\":\"Timor-Leste\"},{\"name\":\"Togo\",\"iso2\":\"TG\",\"iso3\":\"TGO\"},{\"name\":\"Trinidad and Tobago\",\"iso2\":\"TT\",\"iso3\":\"TTO\"},{\"name\":\"Tunisia\",\"iso2\":\"TN\",\"iso3\":\"TUN\"},{\"name\":\"Turkey\",\"iso2\":\"TR\",\"iso3\":\"TUR\"},{\"name\":\"US\",\"iso2\":\"US\",\"iso3\":\"USA\"},{\"name\":\"Uganda\",\"iso2\":\"UG\",\"iso3\":\"UGA\"},{\"name\":\"Ukraine\",\"iso2\":\"UA\",\"iso3\":\"UKR\"},{\"name\":\"United Arab Emirates\",\"iso2\":\"AE\",\"iso3\":\"ARE\"},{\"name\":\"United Kingdom\",\"iso2\":\"GB\",\"iso3\":\"GBR\"},{\"name\":\"Uruguay\",\"iso2\":\"UY\",\"iso3\":\"URY\"},{\"name\":\"Uzbekistan\",\"iso2\":\"UZ\",\"iso3\":\"UZB\"},{\"name\":\"Venezuela\",\"iso2\":\"VE\",\"iso3\":\"VEN\"},{\"name\":\"Vietnam\",\"iso2\":\"VN\",\"iso3\":\"VNM\"},{\"name\":\"West Bank and Gaza\"},{\"name\":\"Western Sahara\",\"iso2\":\"EH\",\"iso3\":\"ESH\"},{\"name\":\"Yemen\",\"iso2\":\"YE\",\"iso3\":\"YEM\"},{\"name\":\"Zambia\",\"iso2\":\"ZM\",\"iso3\":\"ZMB\"},{\"name\":\"Zimbabwe\",\"iso2\":\"ZW\",\"iso3\":\"ZWE\"}];","import axios from 'axios';\r\nimport countriesData from './countries';\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = () => {\r\n    return countriesData.map((country) => country.name);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Cases', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['#035aa6', '#21bf73', '#fd5e53'],\r\n              hoverBackgroundColor: ['#142850', '#06623b', '#c70039'],\r\n              borderWidth: 2,\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Scenarios in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Cases',\r\n            borderColor: '#035aa6',\r\n            backgroundColor: '#142850',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: '#fd5e53',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\"> Global ( World Updates )</option>\r\n        <option value=\"Bangladesh\"> Bangladesh</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return 'Loading...';\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected, styles.rootmaker1)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom style={{fontSize: 30}}> \r\n              Cases\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of active cases\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered, styles.rootmaker2)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom style={{fontSize: 30}}>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of recoveries\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths, styles.rootmaker3)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom style={{fontSize: 30}}>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of deaths caused by COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Info;\r\n","import React from 'react';\r\n\r\nimport { Cards, CountryPicker, Chart } from './components';\r\nimport { fetchData } from './api/';\r\nimport styles from './App.module.css';\r\n\r\nimport image from './images/image.png';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n\r\n    this.setState({ data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n\r\n    this.setState({ data, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n        <Route path=\"/*\">\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Cards data={data} />\r\n        <Chart data={data} country={country} /> \r\n        <center style={{padding:20}}>\r\n        Made With <span class=\"heart\"> ❤ </span> By <a href=\"http://anwholesquare.xyz/\">AnWholeSquare</a>\r\n        </center>\r\n      </div>\r\n        </Route>\r\n      </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3GFZq\",\"image\":\"App_image__2jvR_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__jJnCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl___eEYu\"};","module.exports = __webpack_public_path__ + \"static/media/image.e5802db6.png\";"],"sourceRoot":""}
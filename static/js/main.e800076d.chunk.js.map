{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","hoverBackgroundColor","borderWidth","value","options","legend","display","title","text","lineChart","borderColor","fill","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Info","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","rootmaker1","CardContent","Typography","color","gutterBottom","style","fontSize","variant","start","end","duration","separator","Date","toDateString","rootmaker2","rootmaker3","App","state","setState","this","image","src","alt","CountryPicker","Cards","padding","class","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,sBAAsB,WAAa,0BAA0B,UAAY,yBAAyB,WAAa,0BAA0B,WAAa,4B,qKCCnTC,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACnBC,EAAgBJ,EAEhBE,IACFE,EAAa,UAAMJ,EAAN,sBAAuBE,IAJf,kBAQgDG,IAAMC,IAAIF,GAR1D,2BAQbG,KAAQC,EARK,EAQLA,UAAWC,EARN,EAQMA,UAAWC,EARjB,EAQiBA,OAAQC,EARzB,EAQyBA,WARzB,kBAUd,CAAEH,YAAWC,YAAWC,SAAQC,eAVlB,2HAAH,sDAgBTC,EAAc,uCAAG,8BAAAT,EAAA,+EAEHE,IAAMC,IAAN,UAAaN,EAAb,WAFG,uBAElBO,EAFkB,EAElBA,KAFkB,kBAInBA,EAAKM,KAAI,gBAAGL,EAAH,EAAGA,UAAWE,EAAd,EAAcA,OAAoBI,EAAlC,EAAsBC,WAAtB,MAA8C,CAAEP,UAAWA,EAAUQ,MAAON,OAAQA,EAAOM,MAAOF,YAJxF,wHAAH,qDAUdG,EAAc,uCAAG,8BAAAd,EAAA,+EAEYE,IAAMC,IAAN,UAAaN,EAAb,eAFZ,uBAEVkB,EAFU,EAElBX,KAAQW,UAFU,kBAInBA,EAAUL,KAAI,SAACX,GAAD,OAAaA,EAAQiB,SAJhB,wHAAH,qD,iBC2CZC,EAlED,SAAC,GAAyD,IAAD,IAAtDb,KAAQC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAUR,EAAc,EAAdA,QAAc,EACnCmB,mBAAS,IAD0B,mBAC9DC,EAD8D,KACnDC,EADmD,KAGrEC,qBAAU,YACQ,uCAAG,4BAAArB,EAAA,sEACcS,IADd,OACXa,EADW,OAGjBF,EAAaE,GAHI,2CAAH,qDAMhBC,KACC,IACH,IAAMC,EACJnB,EACE,kBAAC,IAAD,CACED,KAAM,CACJqB,OAAQ,CAAC,QAAS,YAAa,UAC/BC,SAAU,CACR,CACEC,MAAO,SACPC,gBAAiB,CAAC,UAAW,UAAW,WACxCC,qBAAsB,CAAC,UAAW,UAAW,WAC7CC,YAAa,EACb1B,KAAM,CAACC,EAAU0B,MAAOzB,EAAUyB,MAAOxB,EAAOwB,UAItDC,QAAS,CACPC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAK,gBAAD,OAAkBrC,OAGhD,KAGAsC,EACJlB,EAAU,GACR,kBAAC,IAAD,CACEf,KAAM,CACJqB,OAAQN,EAAUT,KAAI,qBAAGC,QACzBe,SAAU,CAAC,CACTtB,KAAMe,EAAUT,KAAI,SAACN,GAAD,OAAUA,EAAKC,aACnCsB,MAAO,QACPW,YAAa,UACbV,gBAAiB,UACjBW,MAAM,GACL,CACDnC,KAAMe,EAAUT,KAAI,SAACN,GAAD,OAAUA,EAAKG,UACnCoB,MAAO,SACPW,YAAa,MACbV,gBAAiB,UACjBW,MAAM,OAKV,KAGN,OACE,yBAAKC,UAAWC,IAAOC,WACpB3C,EAAUyB,EAAWa,I,mCCvCbM,EAtBG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACX1B,mBAAS,IADE,mBACtCH,EADsC,KAC3B8B,EAD2B,KAW7C,OARAxB,qBAAU,YACM,uCAAG,sBAAArB,EAAA,kEACf6C,EADe,SACI/B,IADJ,6EAAH,qDAIdgC,KACC,IAGD,kBAACC,EAAA,EAAD,CAAaP,UAAWC,IAAOO,aAC7B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOR,EAAoBQ,EAAEC,OAAOtB,SAC1E,4BAAQA,MAAM,IAAd,6BACA,4BAAQA,MAAM,cAAd,eACChB,EAAUL,KAAI,SAACX,EAASuD,GAAV,OAAgB,4BAAQC,IAAKD,EAAGvB,MAAOhC,GAAUA,S,uFC4CzDyD,EA5DF,SAAC,GAA4D,IAAD,IAAzDpD,KAAQC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,WACpD,OAAKH,EAKH,yBAAKmC,UAAWC,IAAOC,WACrB,kBAACe,EAAA,EAAD,CAAMf,WAAS,EAACgB,QAAS,EAAGC,QAAQ,UAClC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMxB,UAAWyB,IAAGxB,IAAOyB,KAAMzB,IAAO0B,SAAU1B,IAAO2B,aAC5F,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAACC,MAAO,CAACC,SAAU,KAAjE,SAGA,kBAACJ,EAAA,EAAD,CAAYK,QAAQ,KAAKZ,UAAU,MACjC,kBAAC,IAAD,CAASa,MAAO,EAAGC,IAAKxE,EAAU0B,MAAO+C,SAAU,KAAMC,UAAU,OAErE,kBAACT,EAAA,EAAD,CAAYC,MAAM,iBACf,IAAIS,KAAKxE,GAAYyE,gBAExB,kBAACX,EAAA,EAAD,CAAYK,QAAQ,QAAQZ,UAAU,KAAtC,4BAKJ,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMxB,UAAWyB,IAAGxB,IAAOyB,KAAMzB,IAAOnC,UAAWmC,IAAOyC,aAC7F,kBAACb,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAACC,MAAO,CAACC,SAAU,KAAjE,aAGA,kBAACJ,EAAA,EAAD,CAAYK,QAAQ,KAAKZ,UAAU,MACjC,kBAAC,IAAD,CAASa,MAAO,EAAGC,IAAKvE,EAAUyB,MAAO+C,SAAU,KAAMC,UAAU,OAErE,kBAACT,EAAA,EAAD,CAAYC,MAAM,iBACf,IAAIS,KAAKxE,GAAYyE,gBAExB,kBAACX,EAAA,EAAD,CAAYK,QAAQ,QAAQZ,UAAU,KAAtC,0BAKJ,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMxB,UAAWyB,IAAGxB,IAAOyB,KAAMzB,IAAOlC,OAAQkC,IAAO0C,aAC1F,kBAACd,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAACC,MAAO,CAACC,SAAU,KAAjE,UAGA,kBAACJ,EAAA,EAAD,CAAYK,QAAQ,KAAKZ,UAAU,MACjC,kBAAC,IAAD,CAASa,MAAO,EAAGC,IAAKtE,EAAOwB,MAAO+C,SAAU,KAAMC,UAAU,OAElE,kBAACT,EAAA,EAAD,CAAYC,MAAM,iBACf,IAAIS,KAAKxE,GAAYyE,gBAExB,kBAACX,EAAA,EAAD,CAAYK,QAAQ,QAAQZ,UAAU,KAAtC,4CAjDD,c,kCCkCIqB,E,4MAlCbC,MAAQ,CACNjF,KAAM,GACNL,QAAS,I,EASX6C,oB,uCAAsB,WAAO7C,GAAP,eAAAC,EAAA,sEACDF,EAAUC,GADT,OACdK,EADc,OAGpB,EAAKkF,SAAS,CAAElF,OAAML,QAASA,IAHX,2C,wPALDD,I,OAAbM,E,OAENmF,KAAKD,SAAS,CAAElF,S,qIASR,IAAD,EACmBmF,KAAKF,MAAvBjF,EADD,EACCA,KAAML,EADP,EACOA,QAEd,OACE,yBAAKyC,UAAWC,IAAOC,WACrB,yBAAKF,UAAWC,IAAO+C,MAAOC,IAAKD,IAAOE,IAAI,aAC9C,kBAACC,EAAD,CAAe/C,oBAAqB2C,KAAK3C,sBACzC,kBAACgD,EAAD,CAAOxF,KAAMA,IACb,kBAAC,EAAD,CAAOA,KAAMA,EAAML,QAASA,IAC5B,4BAAQ0E,MAAO,CAACoB,QAAQ,KAAxB,aACU,0BAAMC,MAAM,SAAZ,YADV,OAC4C,uBAAGC,KAAK,6BAAR,uB,GA5BlCC,IAAMC,WCHxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCJjD1G,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCDhCD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.e800076d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3C6aR\",\"card\":\"Cards_card__3KNBg\",\"infected\":\"Cards_infected__1fOd8\",\"recovered\":\"Cards_recovered__177Ub\",\"deaths\":\"Cards_deaths__3mHKj\",\"rootmaker3\":\"Cards_rootmaker3__3iiSI\",\"gradients\":\"Cards_gradients__2RzND\",\"rootmaker2\":\"Cards_rootmaker2__1hJJO\",\"rootmaker1\":\"Cards_rootmaker1__3XZy1\"};","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Cases', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['#035aa6', '#21bf73', '#fd5e53'],\r\n              hoverBackgroundColor: ['#142850', '#06623b', '#c70039'],\r\n              borderWidth: 2,\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Scenarios in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Cases',\r\n            borderColor: '#035aa6',\r\n            backgroundColor: '#142850',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: '#fd5e53',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\"> Global ( World Updates )</option>\r\n        <option value=\"Bangladesh\"> Bangladesh</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return 'Loading...';\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected, styles.rootmaker1)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom style={{fontSize: 30}}> \r\n              Cases\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of active cases\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered, styles.rootmaker2)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom style={{fontSize: 30}}>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of recoveries\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths, styles.rootmaker3)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom style={{fontSize: 30}}>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of deaths caused by COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Info;\r\n","import React from 'react';\r\n\r\nimport { Cards, CountryPicker, Chart } from './components';\r\nimport { fetchData } from './api/';\r\nimport styles from './App.module.css';\r\n\r\nimport image from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n\r\n    this.setState({ data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n\r\n    this.setState({ data, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Cards data={data} />\r\n        <Chart data={data} country={country} /> \r\n        <center style={{padding:20}}>\r\n        Made With <span class=\"heart\"> ❤ </span> By <a href=\"http://anwholesquare.xyz/\">AnWholeSquare</a>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3GFZq\",\"image\":\"App_image__2jvR_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__jJnCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl___eEYu\"};","module.exports = __webpack_public_path__ + \"static/media/image.e5802db6.png\";"],"sourceRoot":""}